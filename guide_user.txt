#open command prompt
cd D:\datapacker0024_mlprojects\whatsapp_chat_analyzer
D:
code .


conda create -p venv python==3.12.1 -y
conda activate venv/

git init
git add README.md
git commit -m "first commit"
git status
git branch -M main
git remote add origin https://github.com/anujahlawat/whatsapp_chat_analyzer.git
git remote -v

git push -u origin main
git pull
#now we will create a ".gitignore:Python" file after git push happen

pip install -r reqirements.txt
git add .                                       #to add new files to the git
git status
git commit -m "the second commit"
git push -u origin main



#open anaconda cmd prompt
#cd D:\datapacker0024_mlprojects\whatsapp_chat_analyzer
#D:
#code .   #it will open vs code window
#python --version #it will tell version of python
#conda --version

#first we create a github repository
#first we create an environment and whatever packages i install that all will created here
#step1 : conda create -p venv python==3.12.1 -y              #name of environment is "venv"
#venv created as a folder in the left side and in that folder we can see our all packages and library
#
#step2 : conda activate venv/ #it means we are activating our environment and now i am in venv environment
#
#now we are going to clone our entire github repository that we create and we need to sync it with the github
#so that we will be able to commit our code
#go to github create repository page and step by step run all the cmd under the heading
#..OR CREATE A NEW REPOSITORY ON THE COMMAND LINE
#
#1: git init  #initialise the git #we are going to initialise the empty git repository
#you can find out .git folder in the folders in our environment 
#
#2: git add README.md   #now i will just add my README.md file to the github repository
#before adding let's create one README.md file
#it a file where we can write our discriptions nd all
#
#3.1: git commit -m "first commit"             #in oder to commit it
#we can see all the files changes happening
#
#3.2: git status
#
#now we are going to push this commit to our git hub repository
#4: git branch -M main
#5.1: git remote add origin https://github.com/anujahlawat/whatsapp_chat_analyzer.git
#5.2: git remote -v
#6.1: git push -u origin main
#
#now we will create a ".gitignore:Python" file on our github repository site and commmit changes on the website as well
#why i create this ? some of the file that need not be commited in the github that all will removed
#in oder to check everything is updated on my side 
#6.2: git pull                               #all the updation will happen
#
#now we will do setup.py
#create a new file setup.py 
#create a new file requirements.txt            #it will have all the packages that i really need to install
#                                                while i actually implementing my project
#what is setup.py?
#it is responsible in creating my machine learning applications as a package
#let's write the code required for setup.py
#setup() fn ---> you can think of it like a meta data infomation
#
#now in setup.py we have find_packages()
#now how will it able to find out that how many packages are there and all
#create a new folder "src" i.e. source and inside that folder try to create a file __init__.py
#now in setup.py find_packages() will run and whenever it see "__init__.py" in how many folders then it will 
#directy consider this source as a package itself and it will try to buid this and once it build you can import
#it anywhere you want like we import pandas, numpy
#my entire project devlopment will basically happen in this folder "src"
#
#
#there are scenario where we need to install 100 packages and it is not possible to write all packages in 
#install_requires=['pandas','numpy'] in setup.py 
#so what we do is, we try to build a fn in setup.py
#
#now whenever i run requirements.txt then setup.py should also run to build the package
#for enabling that, we will specifically write "-e ." in the end of requirements.txt
#
#pip install -r reqirements.txt
#
#git add .   #to add new files to the git
#git status
#git commit -m "the second commit"
#git push -u origin main
